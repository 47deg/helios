repositories {
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

apply plugin: "me.champeau.gradle.jmh"
apply plugin: "kotlin-kapt"
apply plugin: "kotlinx-serialization"
apply plugin: "com.47deg.hood"

dependencies {
    compile project(":helios-core")
    compile project(":helios-meta")
    compile project(":helios-parser")
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlinx"
    compile "com.beust:klaxon:$klaxon"
    compile "com.tomatobean:jsonparser:$jsonparser"
    compile "com.squareup.moshi:moshi-kotlin:$moshi"
    compile "com.github.salomonbrys.kotson:kotson:$kotson"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson"
    compile "com.jsoniter:jsoniter:$jsoniter"
    kapt "io.arrow-kt:arrow-annotations-processor:$arrowVersion"
    kapt project(":helios-meta-compiler")

}

jmh {
    resultFormat = "JSON"
    resultsFile = file("build/reports/benchmarks.json")
    timeOnIteration = "1s"
    if (project.hasProperty("jmhInclude"))
        include = [jmhInclude]
    if (project.hasProperty("jmhResultsFile"))
        resultsFile = file(jmhResultsFile)
}

task executeMasterBenchmark {
    doLast {
        jmh.resultsFile = file("build/reports/master_benchmark.json")
        jmh.include = ["helios.benchmarks.HeliosBenchmark"]
    }
    finalizedBy "jmh"
}

task executeHeliosBenchmark {
    doLast {
        jmh.resultsFile = file("build/reports/helios_benchmark.json")
        jmh.include = ["helios.benchmarks.HeliosBenchmark"]
    }
    finalizedBy "jmh"
}

task executeBenchmarks {
    doLast {
        jmh.resultsFile = file("build/reports/benchmarks.json")
        jmh.include = ["helios.benchmarks.HeliosBenchmark", "helios.benchmarks.Decoding", "helios.benchmarks.DecodingFromRaw", "helios.benchmarks.Parsing"]
    }
    finalizedBy "jmh"
}

compareBenchmark {
    previousBenchmarkPath = file("$rootDir/benchmarks/master_benchmark.json")
    currentBenchmarkPath = [file("build/reports/helios_benchmark.json")]
    outputFormat = "json"
}

compareBenchmarkCI {
    previousBenchmarkPath = file("$rootDir/helios_master/benchmarks/master_benchmark.json")
    currentBenchmarkPath = [file("build/reports/helios_benchmark.json")]
    outputToFile = true
    outputFormat = "json"
    token = System.getenv("GITHUB_ACCESS_TOKEN")
}

uploadBenchmark {
    benchmarkFile = file("build/reports/master_benchmark.json")
    benchmarkDestinationFromProjectRoot = "benchmarks/master_benchmark.json"
    token = System.getenv("GITHUB_ACCESS_TOKEN")
}

apply from: rootProject.file("gradle/gradle-mvn-push.gradle")